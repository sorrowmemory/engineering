<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mappers.productMapper">
<insert id="reviewInsert" parameterType="model.ReviewDTO">
	insert into review(PURCH_NO, PROD_NO, REVIEW_DATE, REVIEW_CONTENT,
					   CAT_NUM )
	values(#{purchNo},#{prodNo},sysdate,#{reviewContent}, 
			( select CAT_NUM from product where PROD_NO = #{prodNo} ))
</insert>

<select id="prodReviewSelect" parameterType="string" resultType="model.ProdReviewDTO">
select p.memb_id membId, pl.purch_no purchNo, pl.prod_no prodNo, 
	   review_content reviewContent, review_date reviewDate, purch_date purchDate
from purchase p, purchase_list pl , review r 
where p.purch_no = pl.purch_no
  and pl.prod_no = r.prod_no
  and pl.purch_no = r.purch_no
  and r.prod_no = #{prodNo}
</select>

<select id="reviewSelect" parameterType="model.ReviewDTO" resultType="model.ReviewDTO">
	select PURCH_NO purchNo, PROD_NO prodNo,  REVIEW_CONTENT reviewContent 
	from review
	where PURCH_NO = #{purchNo} and PROD_NO = #{prodNo}
</select>

<update id="reviewUpdate">
	update review
	set review_content = #{reviewContent}
	where prod_no = #{prodNo} and purch_no = #{purchNo}
</update>

<sql id="payNo">
select to_char(sysdate,'yyyymmdd') || 
       nvl2(max(pay_no), substr(max(pay_no),-6) ,100000) + 1
from payment
where to_char(pay_date,'yyyymmdd') = to_char(sysdate,'yyyymmdd')
</sql>

<insert id="payInsert" parameterType="model.PaymentDTO">
	insert into payment(PAY_NO, PURCH_NO, PAY_METHOD, PAY_ACC_NUM,PAY_PRICE,
						 PAY_DATE, PAY_CARD_BANK)
	values( (<include refid="payNo" /> ) , #{purchNo},#{payMethod},
			#{payAccNum},#{payPrice},sysdate, #{payCardBank})
</insert>


<delete id="cartProdDel" parameterType="model.CartDTO">
	delete from cart
	where memb_id = #{membId} and prod_no = #{prodNo}
</delete>
<insert id="purchListInsert" parameterType="model.CartDTO">
	insert into purchase_list (PURCH_NO,PROD_NO,CAT_NUM,PURCH_QTY,PURCH_PRICE )
	select #{purchNo} , PROD_NO, CAT_NUM, CART_QTY, CART_PRICE 
	from cart
	where MEMB_ID = #{membId} and PROD_NO = #{prodNo}
</insert>

<select id="purchList" parameterType="string" resultType="model.PurchListDTO">
select pr.prod_no prodNo , prod_name prodName, prod_image prodImage,  
       pu.purch_no purchNo, purch_date purchDate,PURCH_TOTAL purchTotal, 
       PAY_NO payNo , REVIEW_CONTENT reviewContent
from   product pr , purchase_list pl , purchase pu, payment pa, review r
where pr.prod_no = pl.prod_no 
  and pl.purch_no = pu.purch_no 
  and pu.purch_no = pa.purch_no(+)
  and pl.purch_no = r.purch_no(+)
  and pl.prod_no = r.prod_no(+)
  and pu.memb_id = #{membId}
</select>

<insert id="purchInsert" parameterType="model.PurchaseDTO">
	insert into Purchase(PURCH_NO,PURCH_DATE, PURCH_TOTAL,PURCH_ADDR,
	                     PURCH_RECEIVER,PURCH_PHONE_NUMBER,PURCH_MSG, MEMB_ID)
	              values(#{purchNo},sysdate,#{purchTotal},#{purchAddr},
	               #{purchReceiver},#{purchPhoneNumber},#{purchMsg},#{memId} )
</insert>


<insert id="prodInsert" parameterType="model.ProductDTO">
	insert into product (PROD_NO,CAT_NUM,PROD_NAME,PROD_PRICE,
						PROD_INFO,PROD_IMAGE,EMP_NO)
	values(#{prodNo},#{catNum},#{prodName},#{prodPrice},
			#{prodInfo},#{prodImage},#{empNo})
</insert>
<update id="prodUpdate">
	update product
	set PROD_NAME = #{prodName}, PROD_PRICE = #{prodPrice} ,
		PROD_INFO = #{prodInfo}
	where PROD_NO = #{prodNo}
</update>

<update id="cartQtyDown" parameterType="model.ProductDTO">
	update cart
	set cart_Qty = cart_Qty - 1,
		CART_PRICE = CART_PRICE - #{cartPrice}
	where memb_id = #{membId} and prod_no = #{prodNo}
</update>

<select id="memCart" parameterType="string" resultType="string">
	select prod_no from cart where memb_id = #{membId}
</select>
<!-- selectList를 사용할 수 없다. selectOne -->
<resultMap type="model.ProductCartDTO" id="productCartMap">
	<association property="productDTO" javaType="model.ProductDTO">
		<result column="prod_name" jdbcType="VARCHAR" property="prodName"/>
		<result column="prod_price" jdbcType="VARCHAR" property="prodPrice" />
	</association>
	<association property="cartDTO" javaType="model.CartDTO">
		<id column="memb_id" jdbcType="VARCHAR" property="membId"/>
		<id column="prod_no" jdbcType="VARCHAR" property="prodNo"/>
		<result column="cart_qty" jdbcType="VARCHAR" property="cartQty"/>
		<result column="cart_price" jdbcType="VARCHAR" property="cartPrice"/>
	</association>
</resultMap>

<select id="cartList" parameterType="model.CartDTO" resultMap="productCartMap">
	select prod_name, prod_price, 
       memb_id, c.prod_no, cart_qty, cart_price
	from product p, cart c
	where p.prod_no = c.prod_no and c.memb_id = #{membId} 
	  AND c.prod_no =#{prodNo}
</select>


<insert id="cartInsert" parameterType="model.CartDTO" >
	merge into cart c
	using (select PROD_NO from product where PROD_NO = #{prodNo} ) p
	on (c.prod_no = p.prod_no and memb_id = #{membId} )
	When MATCHED THEN
	update set CART_QTY = CART_QTY + #{cartQty},
			   CART_PRICE = CART_PRICE + #{cartPrice}
	When not MATCHED THEN 
	insert (MEMB_ID,PROD_NO, CAT_NUM, CART_QTY,CART_PRICE  )
	values(#{membId},#{prodNo},#{catNum},#{cartQty},#{cartPrice})
</insert>
 
<delete id="prodDelete" parameterType="string">
	delete from product
	where PROD_NO = #{prodNo}
</delete>
<select id="prodInfo" parameterType="String" resultType="model.ProductDTO">
	select PROD_NO prodNo, CAT_NUM catNum, PROD_NAME prodName, 
	       PROD_PRICE prodPrice ,PROD_INFO prodInfo,  PROD_IMAGE prodImage, 
	       EMP_NO empNo
	from product
	where PROD_NO = #{prodNo}
</select>

<select id="prodList" resultType="model.ProductDTO">
	select PROD_NO prodNo, CAT_NUM catNum, PROD_NAME prodName, 
	       PROD_PRICE prodPrice ,PROD_INFO prodInfo,  PROD_IMAGE prodImage, 
	       EMP_NO empNo
	from product	    
</select>

<select id="autoNum" resultType="string">
	select GOODS_NUM.nextval from dual
</select>

<select id="catList" resultType="model.CatDTO">
	select CAT_NUM catNum, CAT_TYPE catType, CAT_NAME catName from category
</select>
</mapper>